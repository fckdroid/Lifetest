def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.6'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.getkeepsafe.dexcount'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "dev.suhockii.lifetest"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        test {
            storeFile file(keystoreProperties['releaseFile'])
            keyAlias keystoreProperties['releaseAlias']
            keyPassword keystoreProperties['releaseKeyPassword']
            storePassword keystoreProperties['releaseStorePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.test
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.all {
            unitTests.returnDefaultValues = true
        }
    }
}

dependencies {
    compile('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true;
    }
    implementation(
            "com.android.support:appcompat-v7:$support",
            "com.android.support:recyclerview-v7:$support",
            "com.android.support:cardview-v7:$support",
            "com.android.support:design:$support",
            "com.google.dagger:dagger:$dagger",
            "com.google.dagger:dagger-android-support:$dagger",
            "com.arello-mobile:moxy:$moxy",
            "com.arello-mobile:moxy-android:$moxy",
            "com.arello-mobile:moxy-app-compat:$moxy",
            "com.squareup.retrofit2:retrofit:$retrofit",
            "com.squareup.retrofit2:converter-gson:$retrofit",
            "com.squareup.retrofit2:adapter-rxjava2:$retrofit",
            "com.jakewharton.timber:timber:$timber",
            "com.github.bumptech.glide:glide:$glide",
            "io.reactivex.rxjava2:rxandroid:$rxandroid",
            "io.reactivex.rxjava2:rxjava:$rxjava",
            "android.arch.persistence.room:runtime:$room",
            "android.arch.persistence.room:rxjava2:$room",
    )
    debugImplementation(
            "com.facebook.stetho:stetho:$stetho",
            "com.facebook.stetho:stetho-okhttp3:$stetho",
            "com.squareup.leakcanary:leakcanary-android:$leakcanary",
    )
    releaseImplementation(
            "net.igenius:stetho-no-op:$stetho_noop",
            "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary",
    )
    testImplementation(
            "junit:junit:$junit",
            "org.mockito:mockito-android:$mockito",
    )
    annotationProcessor(
            "com.google.dagger:dagger-compiler:$dagger",
            "com.google.dagger:dagger-android-processor:$dagger",
            "com.arello-mobile:moxy-compiler:$moxy",
            "android.arch.persistence.room:compiler:$room",
            "com.github.bumptech.glide:compiler:$glide",
    )

    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.11.0'
}
